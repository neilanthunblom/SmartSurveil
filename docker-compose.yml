services:
  # shinobi-sql:
  #   container_name: SmartSurveil-shinobi-sql
  #   image: mysql:8.0
  #   volumes:
  #     - ./shinobi/mysql:/var/lib/mysql
  #     - ./shinobi/ShinobiDocker/mysql-init:/docker-entrypoint-initdb.d
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
  #     - MYSQL_DATABASE=${MYSQL_DATABASE}
  #     - MYSQL_USER=${MYSQL_USER}
  #     - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  #   restart: unless-stopped
  
  # shinobi:
  #   container_name: SmartSurveil-shinobi
  #   build:
  #     context: ./shinobi/ShinobiDocker
  #   volumes:
  #     - /dev/shm/ShinobiRAM:/dev/shm/streams
  #     - ./shinobi/shinobi:/home/Shinobi
  #     - /mnt/footage:/home/Shinobi/videos
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - HOME=/home/Shinobi
  #     - DB_HOST=${MYSQL_HOST}
  #     - DB_USER=${MYSQL_USER}
  #     - DB_PASSWORD=${MYSQL_PASSWORD}
  #     - DB_DATABASE=${MYSQL_DATABASE}
  #     - SHINOBI_UPDATE=false
  #   depends_on:
  #     - shinobi-sql
  #   restart: unless-stopped
  
  wyze-bridge:
    container_name: SmartSurveil-wyze-bridge
    hostname: wyze-bridge
    image: mrlt8/wyze-bridge:dev
    volumes:
      - ${LOCAL_STORAGE_PATH}/rawVideo:/record/
    ports:
        - 1935:1935 # RTMP
        - 8554:8554 # RTSP
        - 8888:8888 # HLS
        - 8889:8889 #WebRTC
        - 8189:8189/udp # WebRTC/ICE
        - 5000:5000 # WEB-UI
    environment:
        - ON_DEMAND=true
        - ENABLE_AUDIO=False
        - IGNORE_OFFLINE=true
        #- FPS_FIX=true
        - RECORD_ALL=${RECORD_ALL_CAMERAS}
        - RECORD_PATH=/record/{cam_name}/%Y/%m/%d
        - RECORD_FILE_NAME=%H_%M_%S
        - RECORD_LENGTH=900s
        - WYZE_EMAIL=${WYZE_EMAIL}
        - WYZE_PASSWORD=${WYZE_PASSWORD}
        - API_ID=${WYZE_API_ID}
        - API_KEY=${WYZE_API_KEY}
        - WB_AUTH=${WYZE_WEB_UI_AUTH}
        - WB_USERNAME=${WYZE_WEB_UI_USERNAME}
        - WB_PASSWORD=${WYZE_WEB_UI_PASSWORD}
        # - WB_RTMP_URL=rtmp://${WYZE_STREAM_URL}:1935
        # - WB_RTSP_URL=rtsp://${WYZE_STREAM_URL}:8554
        # - WB_HLS_URL=http://${WYZE_STREAM_URL}:8888
        # - WB_WEBRTC_URL=http://${WYZE_STREAM_URL}:8889
        - WB_IP=${SERVER_IP}
    restart: unless-stopped
  
  scrypted:
    container_name: SmartSurveil-scrypted
    image: ghcr.io/koush/scrypted
    platform: linux/arm64
    volumes:
      - ./volumes/scrypted:/server/volume
    environment:
      - SCRYPTED_WEBHOOK_UPDATE_AUTHORIZATION=Bearer ${SCRYPTED_RANDOM_KEY}
      - SCRYPTED_WEBHOOK_UPDATE=http://localhost:10444/v1/update
    network_mode: host
    logging:
      driver: "none"
    labels:
      - "com.centurylinklabs.watchtower.scope=scrypted"
    restart: unless-stopped
        
  # watchtower manages updates for Scrypted.
  watchtower:
      container_name: SmartSurveil-scrypted-watchtower
      image: containrrr/watchtower
      platform: linux/arm64
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock
      environment:
          - WATCHTOWER_HTTP_API_TOKEN=${SCRYPTED_RANDOM_KEY}
          - WATCHTOWER_HTTP_API_UPDATE=true
          - WATCHTOWER_SCOPE=scrypted
          - WATCHTOWER_HTTP_API_PERIODIC_POLLS=true
      labels:
          - "com.centurylinklabs.watchtower.scope=scrypted"
      command: --interval 3600 --cleanup --scope scrypted
      restart: unless-stopped

  nginx:
    container_name: SmartSurveil-nginx
    build:
      context: ./src/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./src/nginx/ssl:/etc/nginx/ssl
    environment:
      - SERVER_URL=${SERVER_BASE_URL}
      - USE_SHINOBI=${USE_SHINOBI}
      - SHINOBI_URL=${SHINOBI_URL}
      - USE_WYZE=${USE_WYZE}
      - WYZE_URL=${WYZE_URL}
      - WYZE_STREAM_URL=${WYZE_STREAM_URL}
      - USE_SCRYPTED=${USE_SCRYPTED}
      - SCRYPTED_URL=${SCRYPTED_URL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - scrypted
      - watchtower
      #- shinobi
      - wyze-bridge
    restart: unless-stopped